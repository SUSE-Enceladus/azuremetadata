#!/usr/bin/env python3

import argparse
from azuremetadata import azuremetadatautils, azuremetadata


class PreserveArgumentOrder(argparse.Action):
    def __call__(self, parser, namespace, value, option_string=None):
        if not 'ordered_args' in namespace:
            setattr(namespace, 'ordered_args', [])
        namespace.ordered_args.append((self.dest, value))


data = azuremetadata.AzureMetadata().get()
util = azuremetadatautils.AzureMetadataUtils(data)

parser = argparse.ArgumentParser(add_help=False)
for key in util.available_params.keys():
    parser.add_argument(f'--{key}', nargs='?', type=int, const=True, action=PreserveArgumentOrder)

parser.add_argument('-h', '--help', action="store_true", help="Display help")

args = parser.parse_args()
ordered_args = getattr(args, 'ordered_args', [])

if args.help or not len(ordered_args):
    util.pretty_print()
    exit()

try:
    result = util.query(ordered_args)
    for item in result:
        print(f"{item[0]}: {item[1]}")
except azuremetadatautils.QueryException as e:
    print(e)
    exit(1)

